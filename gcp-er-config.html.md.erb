---
title: Deploying Elastic Runtime on GCP
owner: Ops Manager
---

<strong><%= modified_date %></strong>
<html class="list-style-none"></html>

This topic describes how to install and configure Elastic Runtime for Pivotal Cloud Foundry (PCF) on Google Cloud Platform (GCP).

Before beginning this procedure, ensure that you have successfully completed the [Configuring Ops Manager Director on GCP](./cloudform-om-config.html) topic.

<p class="note"><strong>Note</strong>: If you plan to <a href="http://docs.pivotal.io/addon-ipsec/installing.html">install the PCF IPsec add-on</a>, you must do so before installing any other tiles. Pivotal recommends installing IPsec immediately after Ops Manager, and before installing the Elastic Runtime tile. </p> 

## <a id='download-er'></a> Step 1: Download the Elastic Runtime Tile ##

1. If you have not already downloaded Elastic Runtime, log in to [Pivotal Network](https://network.pivotal.io/products/pivotal-cf), and click on **Pivotal Cloud Foundry Elastic Runtime**. 

1. From the **Releases** drop-down, select the release to install.

1. Click on **PCF Elastic Runtime** to download the Elastic Runtime .pivotal file

## <a id='add-er'></a> Step 2: Add Elastic Runtime to Ops Manager ##

1. Navigate to the Pivotal Cloud Foundry Operations Manager Installation Dashboard.

1. Click **Import a Product** to add the Elastic Runtime tile to Ops Manager. This may take a while depending on your connection speed. 
  <p class="note"><strong>Tip</strong>: After you import a tile to Ops Manager, you can view the latest available version of that tile in the Installation Dashboard by enabling the Pivotal Network API. For more information, refer to the [Adding and Deleting Products](./add-delete.html#pivnet-api) topic.</p>

1. On the left, click the plus icon next to the imported Elastic Runtime product to add it to the Installation Dashboard.

1. Click the newly added **Elastic Runtime** tile in the Installation Dashboard.

    <%= image_tag('images/er-tile.png') %>

## <a id='assign-az'></a> Step 3: Assign Availability Zones and Networks ##

1. Select **Assign AZ and Networks**. These are the Availability Zones that you [create](./gcp-om-config.html#az) when configuring Ops Manager Director.

1. Select an Availability Zone under **Place singleton jobs**. Ops Manager runs any job with a single instance in this Availability Zone.

1. Select one or more Availability Zones under **Balance other jobs**. Ops Manager balances instances of jobs with more than one instance across the Availability Zones that you specify.

    <p class="note"><strong>Note</strong>: For production deployments, Pivotal recommends at least three Availability Zones for a highly available installation of Elastic Runtime.</p>

1. From the **Network** drop-down box, choose the network on which you want to run Elastic Runtime.
	
    <%= image_tag("images/er-az.png") %>

1. Click **Save**.
  <p class="note"><strong>Note</strong>: When you save this form, a verification error displays because the PCF security group blocks ICMP. You can ignore this error.</p>
    <%= image_tag("pcfaws/er-network-error.png") %>

## <a id='cname'></a> Step 4: Add DNS Records for Your Load Balancers ##

In this step you redirect queries for your domain to the IP addresses of your load balancers.

1. Locate the static IP addresses of the load balancers you created in [Preparing to Deploy PCF on GCP](./gcp-prepare-env.html):
    * An HTTP(S) load balancer named `pcf-router`.
    * A TCP load balancer for websockets named `pcf-websockets`.
    * A TCP load balancer named `pcf-ssh`
    * A TCP load balancer for the TCP router if you plan on enabling the TCP routing feature.
    <p class="note">You can locate the static IP address of each load balancer by clicking its name under <strong>Networks > Load balancing</strong> in the GCP Console.</p>

1. Log in to the DNS registrar that hosts your domain. Examples of DNS registrars include Network Solutions, GoDaddy, and Register.com.

1. Create **A records** with your DNS registrar that map domain names to the public static IP addresses of the load balancers located above:
  <table border="1" valign="top">
      <tr>
        <th>If your DNS entry is:</th><th>Set to the public IP of this load balancer:</th><th>Required</th><th>Example</th>
      </tr>
      <tr>
        <td>\*.YOURSYSTEMDOMAIN</td>
        <td><code>pcf-router</code></td>
        <td>Yes</td>
        <td>\*.system.example.com</td>
      </tr>
      <tr>
        <td>\*.YOURAPPSDOMAIN</td>
        <td><code>pcf-router</code></td>
        <td>Yes</td>
        <td>\*.apps.example.com</td>
      </tr>
      <tr>
        <td>doppler.YOURSYSTEMDOMAIN</td>
        <td><code>pcf-websockets</code></td>
        <td>Yes</td>
        <td>doppler.system.example.com</td>
      </tr>
            <tr>
        <td>loggregator.YOURSYSTEMDOMAIN</td>
        <td><code>pcf-websockets</code></td>
        <td>Yes</td>
        <td>loggregator.system.example.com</td>
      </tr>
      <tr>
        <td>ssh.YOURSYSTEMDOMAIN</td>
        <td><code>pcf-ssh</code></td>
        <td>Yes, to allow SSH access to apps</td>
        <td>ssh.system.example.com</td>
      </tr>
      <tr>
        <td>tcp.YOURDOMAIN</td>
        <td>IP address of the TCP load balancer for TCP routing</td>
        <td>No, only set up if you have enabled the TCP routing feature</td>
        <td>tcp.example.com</td>
      </tr>
    </table>

1. Save changes within the web interface of your DNS registrar.

1. In a terminal window, run the following `dig` command to confirm that you created your A record successfully:

    <pre class='terminal'>dig xyz.EXAMPLE.COM</pre>

    You should see the A record that you just created:
    <pre class='terminal'>
;; ANSWER SECTION:
xyz.EXAMPLE.COM.      1767    IN  A 203.0.113.1</pre>

<p class='note'><strong>Note</strong>: You <strong>must</strong> complete this step before proceeding to Cloud Controller configuration. A difficult-to-resolve problem can occur if the wildcard domain is improperly cached before the A record is registered. </p>

## <a id='er-domain-config'></a> Step 5: Configure Domains ##

1. Select **Domains**.

    <%= image_tag("domains.png") %>

1. Enter the system and application domains.
    * The **System Domain** defines your target when you push apps to Elastic
      Runtime.
    * The **Apps Domain** defines where Elastic Runtime serves your apps.

    <p class="note"><strong>Note</strong>: Pivotal recommends that you use the same domain name but different subdomain names for your system and app domains. For example, use <code>system.example.com</code> for your system domain, and <code>apps.example.com</code> for your apps domain.</p>

1. Click **Save**.

## <a id='networking'></a> Step 6: Configure Networking ##

<%= partial 'networking-gcp' %>

## <a id='application-containers-config'></a>Step 7: Configure Application Containers ##

<%= partial 'application_container_config' %>

## <a id='er-appdevctrl-config'></a>Step 8: Configure Application Developer Controls ##

1. Select **Application Developer Controls**.

    <%= image_tag("er17-config-appdevctrl.png") %>

1. Enter your intended maximum file upload size.

1. Enter your default RAM memory allocation per app.

1. Enter your default total RAM memory (RAM) quota per Org. You can change this in the CLI.

1. Enter your maximum and default disk quotas per app.

1. Enter your default service instances quota per Org. You can change this in the CLI.

1. Click **Save**.

## <a id='app-security'></a> Step 9: Review Application Security Groups ##

<%= partial 'application_security_group' %>

## <a id='er-auth-config'></a> Step 10: Configure Authentication and Enterprise SSO ##

<%= partial 'authsso_config' %>

## <a id='sys-db'></a>Step 11: Configure System Databases ##

1. Select **Databases**.

1. Select the **Internal Databases** option.

    <%= image_tag("gcp/sys_db.png") %>

1. Click **Save**.

## <a id='internal-mysql'></a> Step 12: (Optional) Configure Internal MySQL ##

<%= partial 'mysql_proxy_config_gcp' %>

## <a id='filestore'></a>Step 13: Configure File Storage ##

1. In the Elastic Runtime tile, select **File Storage**.

    <p class="note"><strong>Note</strong>: Pivotal recommends using a highly resilient and redundant filestore. This approach minimizes system downtime, including for developers using <code>cf push</code>.</p>

1. To use the PCF internal filestore, select **Internal WebDAV**, and click **Save**.

1. To use the external Google filestore for your Elastic Runtime file storage, select the **External Google Cloud Storage** option, and complete the following required fields:
    <%= image_tag("gcp/gcp-file-storage-google-cloud-storage.png") %>
    * Enter values for **Access Key** and **Secret Key**. To obtain the values for these fields:
      1. In the GCP Console, navigate to the **Storage** tab, then click **Settings**.
      1. Click **Interoperability**.
      1. If necessary, click **Enable interoperability access**.
      1. Click **Create a new key**.
      <%= image_tag("gcp/gcp-key-secret-create.png") %>
      1. Copy and paste the generated values into the corresponding Elastic Runtime fields. PCF uses these values for authentication when connecting to Google Cloud Storage.
    <p class="note"><strong>Note</strong>: To create buckets in GCP, navigate to <strong>Storage</strong> and click <strong>CREATE BUCKET</strong>.</p>
    * For the **Buildpacks Bucket Name**, enter the name of the bucket for storing your app buildpacks.
    * For **Droplets Bucket Name**, enter the name of the bucket for your app droplet storage. Pivotal recommends that you use a unique bucket, but you can use the same bucket as the previous step.
    * For **Resources Bucket Name**, enter the name of the bucket for resources. Pivotal recommends that you use a unique bucket, but you can use the same bucket as the previous step.
    * For **Packages Bucket Name**, enter the name of the bucket for packages. Pivotal recommends that you use a unique bucket, but you can use the same bucket as the previous step.
    * Click **Save**.

1. To use an external S3-compatible filestore for your Elastic Runtime file storage, select the **External S3-Compatible Filestore** option. Complete the following fields.
  <p class="note">For best performance of PCF on GCP, Pivotal recommends that you do not select the External S3-Compatible Filestore option.</p>

  1. Enter the **URL Endpoint** for your filestore.
  
  1. Enter your **Access Key** and **Secret Key**.

  1. For **S3 Signature Version** and **Region**, keep the default **V2 Signature** values unless your S3 filestore is in Germany or China. These regions require a **V4 Signature**.

  1. Select **Server-side Encryption** to encrypt the contents of your S3 filestore. 

  1. Enter a **Buildpacks Bucket Name**.
  
  1. Enter a **Droplets Bucket Name**.
  
  1. Enter a **Packages Bucket Name**.

  1. Enter a **Resources Bucket Name**.

  1. Click **Save**.

## <a id='sys-logging'></a>Step 14: (Optional) Configure System Logging ##

If you are forwarding logging messages to an external Reliable Event Logging Protocol (RELP) server, complete the following steps:

1. Select **System Logging**.
  <%= image_tag("cloudform/sys-logging.png") %>
1. If you want to include security events in your log stream, select the **Enable Cloud Controller security event logging** checkbox. This logs all API requests, including the endpoint, user, source IP address, and request result, in the Common Event Format (CEF).
1. Enter the IP address of your syslog server in **External Syslog Aggregator Hostname** and its port in **External Syslog Aggregator Port**. The default port for a syslog server is `514`.

    <p class="note"><strong>Note</strong>: The host must be reachable from the Elastic Runtime network, accept TCP connections, and use the RELP protocol. Ensure your syslog server listens on external interfaces.</p>

1. Select an **External Syslog Network Protocol** to use when forwarding logs.

1. For the **Syslog Drain Buffer Size**, enter the number of messages the Doppler server can hold from Metron agents before the server starts to drop them. See the [Loggregator Guide for Cloud Foundry Operators](../loggregator/log-ops-guide.html) topic for more details.

1. Click **Save**.

## <a id='customize-apps-man'></a>Step 15: (Optional) Customize Apps Manager##

<%= partial 'custombranding' %>

## <a id='smtp'></a>Step 16: (Optional) Configure Email Notifications ##

Elastic Runtime uses SMTP to send invitations and confirmations to Apps Manager
users.
You must complete the **Email Notifications** page if you want to enable
end-user self-registration.

1. Select **Email Notifications**.

    <%= image_tag("cloudform/smtp.png") %>

1. Enter your reply-to and SMTP email information.

1. For **SMTP Authentication Mechanism**, select `none`.

1. Click **Save**.

<p class='note'><strong>Note</strong>: If you do not configure the SMTP
settings using this form, the administrator must create orgs and users using
the cf CLI tool. See <a href="../adminguide/cli-user-management.html">Creating and Managing Users with the cf CLI</a> for more information.</p>

## <a id='ccdb-key'></a>Step 17: (Optional) Add CCDB Restore Key##

<%= partial 'restore_ccdb_key' %>

## <a id='config-smoke-test'></a>Step 18: Configure Smoke Tests##

<%= partial 'smoketests' %>

## <a id='advanced-features'></a>Step 19: (Optional) Enable Advanced Features ##

Use caution when enabling advanced features if you have other Pivotal Cloud Foundry service tiles installed in your Pivotal Cloud Foundry deployment. Not all of the services are guaranteed to work as expected with these features enabled.

### <a id="disk-memory-overcommit"></a>Diego Cell Memory and Disk Overcommit

If your apps do not use the full allocation of disk space and memory set in the **Resource Config** tab, you might want use this feature. These fields control the amount to overcommit disk and memory resources to each Diego Cell VM.

For example, you might want to use the overcommit if your apps use a small amount of disk and memory capacity compared with the **Resource Config** settings for **Diego Cell**.

<p class="note"><strong>Note</strong>: Due to the risk of app failure and the deployment-specific nature of disk and memory use, Pivotal has no recommendation about how much, if any, memory or disk space to overcommit.</p>

To enable overcommit, follow these steps:

1. Select **Advanced Features**.

    <%= image_tag("./disk-memory-overcommit.png") %>

1. Enter the total desired amount of Diego cell memory value in the **Cell Memory Capacity (MB)** field. Refer to the **Diego Cell** row in the **Resource Config** tab for the current Cell memory capacity settings that this field overrides.

1. Enter the total desired amount of Diego cell disk capacity value in the **Cell Disk Capacity (MB)** field. Refer to the **Diego Cell** row in the **Resource Config** tab for the current Cell disk capacity settings that this field overrides.

1. Click **Save**.

<p class="note"><strong>Note</strong>: Entries made to each of these two fields set the total amount of resources allocated, not the overage.</p>

### <a id="disable-privilege"></a> Disable Privileged App Containers

By default, Pivotal Cloud Foundry deploys apps in privileged containers. Apps deployed to privileged containers can gain access to their host operating system. In general, Pivotal recommends disabling privileged containers by selecting this option.

<p class="note"><strong>Note</strong>: Do not select <strong>Disable privileged app containers</strong> if you are running applications that use FUSE file system support. </p>

To disable privileged app containers, follow these steps:

1. Select **Advanced Features**.

    <%= image_tag("images/disk-memory-overcommit.png") %>

1. Select **Disable privileged app containers**. This setting only applies to newly pushed apps, so you must restart any pre-existing apps to apply this option.

1. Click **Save**.

<p class="note"><strong>Note</strong>: Containers based on Docker images are always unprivileged, regardless of this setting.</p>

### <a id="enable-tcp"></a>Enable TCP Routing

TCP Routing is available for users who want an alternative to HTTP. For more information, including details about setting up your networking infrastructure for TCP Routing, see [Enabling TCP Routing](../adminguide/enabling-tcp-routing.html). 

1. TCP Routing is disabled by default. To enable this feature, select the **Enable TCP Routing** radio button. 

    <%= image_tag("images/tcp_routing.png") %>

1. You do not need to enter **TCP Router IPs** if you are using a GCP load balancer for the TCP router. Instead, navigate to <strong>Resource Config</strong> and, in the **TCP Router** job, enter the TCP load balancer name prepended with `tcp:` in the **LOAD BALANCERS** column. For example, `tcp:pcf-tcp-router`. See [Step 22: Configure Router to Elastic Load Balancer](#config-lb) for more information.

1. In **TCP Routing Ports**, enter the range of ports you reserved for TCP routes. These ports must be available on your load balancer. You can specify a list of ports with commas between each port number and specify ranges of ports with dashes between the first and last port number. This configuration only applies the first time you specify it here. If you later want to update the ports, see the [HTTP vs. TCP Routes](../devguide/deploy-apps/routes-domains.html#http-vs-tcp-routes) section of the _Routes and Domains_ topic that describes using the cf CLI to update TCP Routing ports.

### <a id="disable-tcp"></a>Disable TCP Routing

1. If you want to disable TCP routing after enabling it, click **Select this option if you prefer to enable TCP Routing at a later time**.

1. Manually remove the TCP routing domain. 

## <a id='errands'></a>Step 20: Configure Errands Page ##

<%= partial 'errands' %>

## <a id='config-lb'></a>Step 21: Configure Load Balancers ##

1. Navigate to the GCP Console and click **Load balancing**.

    <%= image_tag('gcp/config-lb.png') %>

    You should see the SSH load balancer, the HTTP(S) load balancer, the TCP Websockets load balancer, and optionally, the TCP router that you created in the [Create Load Balancers in GCP](gcp-prepare-env.html#create_loadbalancers) section of the Preparing to Deploy PCF on GCP topic. 

1. Record the name of your SSH load balancer and your TCP Websockets load balancer. For example, `pcf-ssh` and `pcf-websockets`.

1. Click your HTTP(S) load balancer. For example, `pcf-router`. 
    <%= image_tag('gcp/pcf-router.png') %>

1. Under **Backend services**, record the name of the backend service of the HTTP(S) load balancer. For example, `pcf-backend`.

1. In the **Elastic Runtime** tile, click **Resource Config**.

    <%= image_tag("gcp/resource_config.png") %>

1. Under the **LOAD BALANCERS** column of the **Router** row, enter a comma-delimited list consisting of the name of your TCP Websockets load balancer and the name of your HTTP(S) load balancer backend with the protocol prepended. For example, `tcp:pcf-websockets,http:pcf-backend`.

    <p class="note"><strong>Note</strong>: Do not add a space between key/value pairs in the <code>LOAD BALANCER</code> field or it will fail.</p>

1. If you have enabled TCP routing in the <a href="#enable-tcp">Advanced Features</a> pane and set up the <a href="./gcp-prepare-env.html#tcp_websockets_lb">TCP Load Balancer in GCP</a>, add the name of your TCP load balancer, prepended with <code>tcp:</code>, to the <strong>LOAD BALANCERS</strong> column of the <storng>TCP Router</strong> row. For example, <code>tcp:pcf-tcp-router</code>.

1. Under the **LOAD BALANCERS** column of the **Diego Brain** row, enter the name of your SSH load balancer prepended with `tcp:`. For example, `tcp:pcf-ssh`.

1. Verify that the **Internet Connected** checkbox for every job is checked to allow the jobs to reach the Internet. This gives all VMs a public IP address that enables outbound Internet access.
   <p class="note"><strong>Note</strong>: If you want to provision a Network Address Translation (NAT) box to provide Internet connectivity to your VMs instead of providing them with public IP addresses, deselect the <strong>Internet Connected</strong> checkboxes. For more information on using NAT in GCP, see the <a href="https://cloud.google.com/compute/docs/networking">GCP documentation</a>.</p>  

1. Click **Save**.

## <a id='disable-resources'></a>Step 21: (Optional) Disable Unused Resources ##

<%= partial 'disable_resources' %>

## <a id='stemcell'></a>Step 22: Verify and Download Stemcell Version##

Verify whether Ops Manager is providing the stemcell version required by Elastic Runtime. If the correct version is already present, you do not need to download a new stemcell.

1. In the Elastic Runtime tile, select **Stemcell**.

1. Verify that the version indicated in the filename matches the version of stemcell required by Elastic Runtime. 
  * If Elastic Runtime detects that a stemcell `.tgz` file is present in the Ops Manager Director VM at `/var/tempest/stemcells/`, the Stemcell screen displays filename information.
  <%= image_tag("stemcell_18.png") %>
  * If Elastic Runtime cannot detect a stemcell `.tgz` file, the following message displays:
  <%= image_tag("stemcell_not_found.png") %>

1. If the version of the stemcell file that is loaded does not match the required version listed in the <a href="http://network.pivotal.io">Pivotal Network</a> download page for Elastic Runtime, or cannot be found by Ops Manager, perform the following steps to download and import a new stemcell file:

  1. Log in to the [Pivotal Network](https://network.pivotal.io/products/pivotal-cf) and click **Stemcells**.

  1. Download the appropriate stemcell version targeted for your IaaS.

  1. In the **Stemcell** section of the Elastic Runtime tile, click **Import Stemcell** to import the downloaded stemcell <code>.tgz</code> file.


## <a id='complete'></a>Step 23: Complete the Elastic Runtime Installation ##

1. Click the **Installation Dashboard** link to return to the Installation
Dashboard.

1. Click **Apply Changes**. If the following ICMP error message appears, click
**Ignore errors and start the install**.

    <%= image_tag("cloudform/install-error.png") %>

    The install process generally requires a minimum of 90 minutes to complete.
    The image shows the Changes Applied window that displays when the
    installation process successfully completes.

    <%= image_tag("cloudform/ops-manager-complete.png") %>

